services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: my-laravel-app
    container_name: my-laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/vendor
      - ./.env:/var/www/.env
    environment:
      - APP_ENV=${APP_ENV:-local}
      - APP_DEBUG=${APP_DEBUG:-true}
    networks:
      - app-network
  nginx:
    image: nginx:alpine
    container_name: nginx-server
    ports:
      - '8000:80'
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  node:
    build:
      context: .
      dockerfile: Dockerfile.node
    image: my-laravel-node
    container_name: my-laravel-node
    ports:
      - '3000:3000'
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - node_modules:/var/www/node_modules
      - ./docker/ssl/:/var/www/docker/ssl
    environment:
      - NODE_ENV=${NODE_ENV:-development}
    networks:
      - app-network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  db:
    image: mysql:8.0
    container_name: my-mysql
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=${DB_DATABASE:-ArticlesHostingSite}
      - MYSQL_USER=${DB_USERNAME:-laravel}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root}
      - MYSQL_PASSWORD=${DB_PASSWORD:-laravel}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network
    ports:
      - '3306:3306'

  minio:
    image: minio/minio:latest
    container_name: minio-server
    restart: unless-stopped
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin}
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  node_modules:
    driver: local
  minio-data:
    driver: local
